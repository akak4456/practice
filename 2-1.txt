import kotlin.random.Random
import kotlinx.coroutines.*
import kotlinx.coroutines.flow.*

fun flowSomething(): Flow<Int> = flow {
    repeat(10) {
        emit(Random.nextInt(0,500))
        delay(10L)
    }
}

fun main() = runBlocking {
    flowSomething().collect {value ->
    	println(value)
    }
}

import kotlin.random.Random
import kotlinx.coroutines.*
import kotlinx.coroutines.flow.*

fun flowSomething(): Flow<Int> = flow {
    repeat(10) {
        emit(Random.nextInt(0,500))
        delay(100L)
    }
}

fun main() = runBlocking<Unit> {
    val result = withTimeoutOrNull(500L) {
        flowSomething().collect { value ->
        	println(value)
        }
        true
    } ?: false
    if(!result){
        println("취소되었습니다.")
    }
}

import kotlin.random.Random
import kotlinx.coroutines.*
import kotlinx.coroutines.flow.*

fun main() = runBlocking<Unit> {
    flowOf(1,2,3,4,5).collect { value ->
    	println(value)
    }
}

import kotlin.random.Random
import kotlinx.coroutines.*
import kotlinx.coroutines.flow.*

fun main() = runBlocking<Unit> {
    listOf(1,2,3,4,5).asFlow().collect { value ->
    	println(value)
    }
    (6..10).asFlow().collect {
        println(it)
    }
}