import kotlinx.coroutines.*
import kotlinx.coroutines.channels.*

fun main() = runBlocking<Unit> {
    val channel = Channel<Int>()
    launch {
        for(x in 1..10){
            channel.send(x)
        }
    }
    
    repeat(10){
        println(channel.receive())
    }
    
    println("완료")
}

import kotlinx.coroutines.*
import kotlinx.coroutines.channels.*

fun main() = runBlocking<Unit> {
    val channel = Channel<Int>()
    launch {
        for(x in 1..10){
            channel.send(x)
        }
        channel.close()
    }
    for(x in channel){
        println(x)
    }
    println("완료")
}

import kotlinx.coroutines.*
import kotlinx.coroutines.channels.*

fun main() = runBlocking<Unit> {
    val oneToTen = produce {
        for (x in 1..10){
            channel.send(x)
        }
    }
    
    oneToTen.consumeEach {
        println(it)
    }
    
    println("완료")
}import kotlinx.coroutines.*
import kotlinx.coroutines.channels.*

fun main() = runBlocking<Unit> {
    val oneToTen = produce {
        for (x in 1..10){
            channel.send(x)
        }
    }
    
    oneToTen.consumeEach {
        println(it)
    }
    
    println("완료")
}